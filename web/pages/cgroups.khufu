import {refresher, json} from '../middleware/request'
import {fine_grained} from '../query/lang.js'
import {query} from '../middleware/local-query.js'
import * as stores from '../stores/cgroups.js'
import {bool, enable, disable, toggle} from '../stores/simple.js'
import {repr} from '../util/view'

style:
  .timestamp
    font-size: xx-small
    color: gray
  .cli
    font-family: Hack, monospace
    font-size: small
  .content
    padding: 8px 16px
  .small
    font-size: 70%

view main():
  <div.content>
    store @processes = stores.processes | refresher
      | json('/all_processes.json')
    store @groups = stores.groups
      | query(fine_grained()
        .has('cgroup')
        .matching('metric', '^user_time$|^system_time$')
        .tip())
    <div>
      <h1>
        'CGroups'
    if @groups == null or @processes == null:
      "Loading..."
    else:
      for [supergroup, group] of @groups.entries() key supergroup:
        <div>
          store @showgroup = bool | toggle(supergroup == "system")
          <h2>
            supergroup
            " "
            <button.pure-button.small>
              link {click} toggle(@showgroup) -> @showgroup
              if @showgroup:
                "collapse"
              else:
                "expand"
          if @showgroup:
            for [gname, processes] of group.entries() key gname:
              <div>
                store @show = bool | disable()
                <h3>
                  gname
                  " "
                  <button.pure-button.small>
                    link {click} toggle(@show) -> @show
                    "toggle hidden"
                <div>
                  for proc of processes key proc.pid:
                    let p = @processes.get(proc.pid)
                    if p and not p.is_supervisor or @show:
                      <div.process>
                        <code>
                          proc.pid
                          if p:
                            ` [${ p.uid }/${ p.gid }]: `
                            p.cmdline

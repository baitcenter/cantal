import {refresher, json} from '../middleware/request'
import {sockets} from '../stores/sockets'
import {repr, pprint, sum_values} from '../util/view'
import * as stores from '../stores/users.js'
import {bool, enable, disable, toggle} from '../stores/simple.js'
import {pairs} from '../util/iter'


style:
  .group
    margin-left: 32px
    margin-top: 4px
    margin-bottom: 24px
  .small
    font-size: 70%
  h2.title
    padding-left: 16px
    border-bottom: solid #cbcbcb 1px
  .subsection
    margin-left: 32px


view main():
  <div>
    store @sockets = stores.sockets | refresher | json('/all_sockets.json')
    store @processes = stores.processes | refresher
      | json('/all_processes.json')
    <div.title.error?(@sockets.error)>
      <h1>
        "Projects by Uid"
      if @sockets.error:
        <span.error>
          @sockets.error
      elif @sockets.latency:
        <span.latency
          title="Latency of getting statistics (the request roundtrip time)">
          `${@sockets.latency} ms`
    if @processes == null or @sockets.data == null:
      "Loading..."
    else:
      for [uid, grp] of @processes.entries() key uid:
        <h2.title>
          uid
        <div.group>
          let uinfo = @sockets.data.by_user[uid]
          let total = uinfo and uinfo.by_state
          store @showpro = bool | disable()
          store @showsock = bool | disable()
          if total:
            <h3>
              `Sockets [${ total.LISTEN }/${ total.ESTABLISHED }] `
              <button.pure-button.small>
                link {click} toggle(@showsock) -> @showsock
                if @showsock:
                  "hide"
                else:
                  "show"
            <div.subsection>
              if @showsock:
                let passive = @sockets.data.passive[uid]
                let active = @sockets.data.active[uid]
                if passive:
                  <h4>
                    "Passive"
                  <table.pure-table>
                    <thead>
                      <tr>
                        <td> "Port"
                        <td> "Total"
                        <td> "Established"
                        <td> "TimeWait"
                        <td> "CloseWait"
                    <tbody>
                      for [port, info] of pairs(passive) key port:
                        <tr>
                          <td>
                            port
                          <td>
                            sum_values(info.stats.by_state)
                          <td>
                            info.stats.by_state.ESTABLISHED or ''
                          <td>
                            info.stats.by_state.TIME_WAIT or ''
                          <td>
                            info.stats.by_state.CLOSE_WAIT or ''
                if active:
                  <h4>
                    "Active"
                  <table.pure-table>
                    <thead>
                      <tr>
                        <td> "Port"
                        <td> "Total"
                        <td> "Established"
                        <td> "TimeWait"
                        <td> "CloseWait"
                    <tbody>
                      for [port, info] of pairs(active) key port:
                        <tr>
                          <td>
                            port
                          <td>
                            sum_values(info.stats.by_state)
                          <td>
                            info.stats.by_state.ESTABLISHED or ''
                          <td>
                            info.stats.by_state.TIME_WAIT or ''
                          <td>
                            info.stats.by_state.CLOSE_WAIT or ''
          <h3>
            `Processes [${ grp.processes.length }] `
            <button.pure-button.small>
              link {click} toggle(@showpro) -> @showpro
              if @showpro:
                "hide"
              else:
                "show"
          <div.subsection>
            if @showpro:
              <ul>
                for item of grp.processes key item.pid:
                  if item.cmdline and not item.is_supervisor:
                    <li>
                      <code>
                        item.cmdline

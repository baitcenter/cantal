import {refresher, json} from '../middleware/request'
import {fine_grained} from '../query/lang.js'
import {query} from '../middleware/local-query.js'
import * as stores from '../stores/process_metrics.js'
import {repr} from '../util/view'

style:
  .timestamp
    font-size: xx-small
    color: gray
  .cli
    font-family: Hack, monospace
    font-size: small
  .content
    padding: 8px 16px

view main():
  <div.content>
    store @processes = stores.processes | refresher
      | json('/all_processes.json')
    store @metrics = stores.metrics
      | query(fine_grained()
        .has('metric')
        .has('group', 'state')
        .has('pid')
        .tip())
    <div>
      <h1>
        'Process Metrics'
    if @metrics == null or @processes == null:
      "Loading..."
    else:
      for [pid, proc_metrics] of @metrics.entries() key pid:
        let proc = @processes.get(pid)
        if proc:
          <h2>
            pid
            ". "
            proc.name
          if proc:
            <pre.cli>
              proc.cmdline
          <table.pure-table>
            <thead>
              <tr>
                <th> "Metric"
                <th> "Value"
                <th> "Timestamp"
            <tbody>
            for [k, val, ts] of proc_metrics key repr(k):
              <tr>
                <td>
                  `${k.group or k.state}.${k.metric}`
                <td>
                  `${ val.constructor.metric_type } (${ val.value })`
                <td.timestamp>
                  ts[0]

import {last_beacon as beacon, remote_enabled} from './websock'
import {main as enable_remote} from './pages/enable_remote.khufu'
import {main as status} from './pages/status.khufu'
import {main as processes} from './pages/processes.khufu'
import {main as metrics} from './pages/metrics.khufu'
import {main as peers} from './pages/peers.khufu'
import {@router, toggle_remote, go} from './util/routing'

style:
  .version
    font-size: xx-small
    padding: 0px 16px 8px 16px



view _local_menu():
  <li.pure-menu-item.pure-menu-active?(@router.page == 'status')>
    <a.pure-menu-link href="/local/status">
      link {click} go(event) -> @router
      "Status"
  <li.pure-menu-item.pure-menu-active?(@router.page == 'processes')>
    <a.pure-menu-link href="/local/processes">
      link {click} go(event) -> @router
      "Processes"
      if beacon:
        ` [${ beacon.processes }]`
  <li.pure-menu-item.pure-menu-active?(@router.page == 'metrics')>
    <a.pure-menu-link href="/local/metrics">
      link {click} go(event) -> @router
      "Metrics"
      if beacon:
        ` [${ beacon.values }]`
  <li.pure-menu-item.pure-menu-active?(@router.page == 'peers')>
    <a.pure-menu-link href="/local/peers">
      link {click} go(event) -> @router
      "Pings"

view _remote_menu():
  <li.pure-menu-item.pure-menu-active?(@router.page == 'peers')>
    <a.pure-menu-link href="/remote/peers">
      link {click} go(event) -> @router
      "Pings"

  <li.pure-menu-item.pure-menu-active?(@router.page == 'list')>
    <a.pure-menu-link href="/remote/list">
      link {click} go(event) -> @router
      "Peers"

  <li.pure-menu-item.pure-menu-active?(@router.page == 'grid')>
    <a.pure-menu-link href="/remote/grid">
      link {click} go(event) -> @router
      "Grid"


view main(version):
  <div.pure-g>
    <div.pure-u-1.pure-u-md-1-3.pure-u-xl-4-24>
      <div.pure-menu>
        <a.pure-menu-heading href="/">
          `Cantal`
        <ul.pure-menu-list>
          if beacon:
            <li.version.pure-menu-item>
              `${ beacon.version } / ${ version }`
          <li.pure-menu-item>
            <label>
              let on = remote_enabled()
              let rtr = @router
              <input.ios-switch.bigswitch.pregreen?(on).blue?(on)
                type="checkbox" value='ok' checked=@router.remote>
                link {click} toggle_remote(rtr) -> @router
              <div>
                <div>
          if @router.remote:
            _remote_menu()
          else:
            _local_menu()
    <div.pure-u-1.pure-u-md-2-3.pure-u-xl-20-24>
      if not(@router.remote):
        if @router.page == 'status':
          status()
        elif @router.page == 'processes':
          processes()
        elif @router.page == 'metrics':
          metrics()
        elif @router.page == 'peers':
          peers()
        else:
          @router.page
      else:
        if remote_enabled():

        else:
          enable_remote()

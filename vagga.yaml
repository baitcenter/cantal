commands:

  make: !Command
    description: Build cantal binaries and javascript in ubuntu container
    container: ubuntu
    run: [make]

  cargo: !Command
    description: Run arbitrary cargo command
    container: ubuntu
    run: [cargo]

  watch: !Command
    description: Build and watch javascripts
    container: ubuntu
    work-dir: frontend
    run: [webpack, --watch]

  build: !Command
    description: Build cantal binaries with cargo
    container: ubuntu
    environ:
      HOME: /work/target
    run: [cargo, build]

  test: !Command
    description: Build and run tests
    container: ubuntu
    environ:
      RUST_BACKTRACE: 1
    run: [cargo, test]

  py3: !Command
    description: Run python3 example
    container: ubuntu
    run: python3 py3/example.py
    environ:
      CANTAL_PATH: /work/run/py3

  docs: !Command
    description: Build HTML docs
    container: docs
    work-dir: docs
    run: [make, html]

  build-ubuntu-package: !Command
    description: Build ubuntu (trusty) package
    container: ubuntu
    write-mode: transient-hard-link-copy
    run: |
      make -B
      checkinstall --default \
        --maintainer=paul@colomiets.name \
        --pkglicense=MIT --pkgname=cantal \
        --pkgversion="$(cat version.txt)" \
        --requires="libssl1.0.0" \
        --nodoc --strip=no \
        make install

  mpack: !Command
    description: Run interactive python with msgpack (to debug file format)
    container: msgpack
    run: python

containers:

  ubuntu:
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse ~
    - !Install [make, checkinstall, wget, ca-certificates, libssl-dev]

    - !NpmInstall [jade, babel, uglify-js, webpack, babel-loader]

    - !TarInstall
      url: "http://static.rust-lang.org/dist/rust-1.2.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr --components=rustc,cargo"

    - !GitInstall
      url: "git://github.com/tailhook/marafet"
      script: |
        mkdir /tmp/marafet
        # Cargo can't build in /tmp/git:%2F...
        cp -R . /tmp/marafet
        cd /tmp/marafet
        make install PREFIX=/usr

    environ:
      HOME: /work/target
      PATH: /bin:/usr/bin:/usr/local/bin
      NODE_PATH: /usr/local/lib/node_modules

  docs:
    setup:
    - !Alpine v3.1
    - !Install [py-sphinx, make]

  msgpack:
    setup:
    - !Alpine v3.1
    - !Py2Install [msgpack-python]


commands:

  make: !Command
    description: Build cantal binaries and javascript in ubuntu container
    container: ubuntu
    run: [make]

  watch: !Command
    description: Build and watch javascripts
    container: ubuntu
    work-dir: frontend
    run: [watch-make]

  build: !Command
    description: Build cantal binaries with cargo
    container: ubuntu
    environ:
      HOME: /work/target
    run: [cargo, build]

  test: !Command
    description: Build and run tests
    container: ubuntu
    environ:
      RUST_BACKTRACE: 1
    run: [make, test]

  py3: !Command
    description: Run python3 example
    container: ubuntu
    run: python3 py3/example.py
    environ:
      CANTAL_PATH: /work/run/py3

  docs: !Command
    description: Build HTML docs
    container: docs
    work-dir: docs
    run: [make, html]

  build-ubuntu-package: !Command
    description: Build ubuntu (trusty) package
    container: ubuntu
    write-mode: transient-hard-link-copy
    run:
    - checkinstall
    - --default
    - --maintainer=paul@colomiets.name
    - --pkglicense=MIT
    - --pkgname=cantal
    - --nodoc
    - --strip=no
    - make
    - -B
    - all
    - install

  mpack: !Command
    description: Run interactive python with msgpack (to debug file format)
    container: msgpack
    run: python

containers:

  ubuntu:
    # The container to build lithos ubuntu package
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse ~
    - !Install [make, checkinstall, wget]

    - !NpmInstall [jade, babel, uglify-js]

    # Node watch-make
    - !NpmInstall [child_process_with_argv0, temp, carrier, underscore, async]
    - !Sh 'npm install -g --no-bin-links which'
    - !Git
      url: git://github.com/andrewffff/watch-make.git
      path: /usr/lib/watch-make

    - !BuildDeps [ca-certificates]
    - !TarInstall
      url: "http://static.rust-lang.org/dist/rust-1.0.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr --components=rustc,cargo"

    environ:
      HOME: /work/run
      PATH: /bin:/usr/bin:/usr/local/bin:/usr/lib/watch-make
      NODE_PATH: /usr/local/lib/node_modules

  docs:
    setup:
    - !Alpine v3.1
    - !Install [py-sphinx, make]

  msgpack:
    setup:
    - !Alpine v3.1
    - !Py2Install [msgpack-python]


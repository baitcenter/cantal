import {format_uptime, till_now_ms, from_ms} from 'util/time'
import {component} from 'util/base'
import {Sparkline} from 'util/sparkline'
import {DonutChart} from 'util/donut'

css:
  .pointer
    cursor: pointer

html icon(name):
  span.glyphicon[class="glyphicon-{name}"]

html render_self(stats, latency):
  span.pointer[title="Uptime of the cantal agent itself"]
    " up "
    =format_uptime(till_now_ms(from_ms(stats.startup_time)))
  " "
  span.pointer[title="Latency of requests to the cantal"]
    "{latency:d}ms"
  " "
  span.pointer[title="Time it takes for cantal to read all stats once"]
    "{stats.scan_duration:d}ms"

html render_machine(data):
  span.pointer[title="Minute Load Average"]
    "{data.load_avg_1min:.2f}"
  " / "
  span.pointer[title="5 Minutes Load Average"]
    "{data.load_avg_5min:.2f}"
  " / "
  span.pointer[title="15 Minutes Load Average"]
    "{data.load_avg_15min:.2f}"
  " / "
  span.pointer[title="Uptime of the box running cantal"]
    "up "
    =format_uptime(till_now_ms(from_ms(data.boot_time*1000)))
  " "
  #+component(Sparkline, this.cpu_chart)
  #span= " "
  #+component(DonutChart, this.memory_chart, {width: 32, height: 32})

html render(data, latency, error, current_page):
  div.navbar.navbar-default
    div.container-fluid
      div.navbar-header
        a.navbar-brand[href="#/"]
          "Cantal"
      div.collapse.navbar-collapse
        ul.nav.navbar-nav
          li.active?(current_page == 'processes')
            a[href="#/processes"]
              "Processes"
          li.active?(current_page == 'metrics')
            a[href="#/metrics"]
              "Metrics"
          li.active?(current_page == 'peers')
            a[href="#/peers"]
              "Peers"
        form.navbar-form.navbar-right.bg-danger?(error)
          "("
          =icon('hdd')
          " "
          if data:
            =render_machine(data)
          ") ("
          =icon('scale')
          if data:
            =render_self(data, latency)
          ") "
          a.btn.btn-default[href="#/status"]
            "Status"

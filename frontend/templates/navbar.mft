import {format_uptime, till_now_ms, from_ms} from 'util/time'
import {component} from 'util/base'
import websock from 'util/websock'

css:
  .pointer
    cursor: pointer

html icon(name):
  span.glyphicon[class="glyphicon-{name}"]

html render_self(beacon, connected):
  span.pointer[title="Uptime of the cantal agent itself"]
    " up "
    =format_uptime(till_now_ms(from_ms(beacon.startup_time)))
  " "
  span.pointer[title="Latency of requests to the cantal"]
    "{beacon.latency:d}ms"
  " "
  span.pointer[title="Time it takes for cantal to read all stats once"]
    "{beacon.scan_duration:d}ms"

html render_machine(data):
  span.pointer[title="Uptime of the box running cantal"]
    "up "
    =format_uptime(till_now_ms(from_ms(data.boot_time)))
  " "

html render(current_page):
  div.navbar.navbar-default
    div.container-fluid
      let beacon = websock.last_beacon
      div.navbar-header
        a.navbar-brand[href="#/"]
          "Cantal"
      div.collapse.navbar-collapse
        ul.nav.navbar-nav
          li.active?(current_page == 'processes')
            a[href="#/processes"]
              "Processes"
              if beacon:
                " [{beacon.processes}]"
          li.active?(current_page == 'metrics')
            a[href="#/metrics"]
              "Metrics"
              if beacon:
                " [{beacon.values}]"
          li.active?(current_page == 'peers')
            a[href="#/peers"]
              "Peers"
              if beacon:
                " [{beacon.peers}]"
          li.active?(current_page == 'remote')
            a[href="#/remote"]
              "Remote"
              if beacon:
                if beacon.remote_total == null:
                  " [off]"
                else:
                  " [{beacon.remote_connected}/{beacon.remote_total}]"
        form.navbar-form.navbar-right.bg-danger?(!websock.connected)
          "("
          =icon('hdd')
          " "
          if beacon:
            =render_machine(beacon)
          ") ("
          =icon('scale')
          if beacon:
            =render_self(beacon, websock.connected)
          ") "
          a.btn.btn-default[href="#/status"]
            "Status"
